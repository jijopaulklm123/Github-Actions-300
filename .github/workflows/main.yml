name: Build-Test-Deploy

on:
  repository_dispatch:
  workflow_dispatch:
  push:
    branches: 
      - master
  schedule:
    - cron: '0 7 * * *'
    - cron: '0 21 * * *'
jobs:
 Build-job:
    runs-on: ubuntu-latest
    name: Making builds
    steps:
      - uses: actions/checkout@v1
      - name: Make build
        uses: jzweifel/gatsby-cli-github-action@master
        with:
            gatsby-arg: build

      - name: Uploading artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: artifact/index.html
      - name: Cache 
        uses: actions/cache@v2
        with:
              path: ~/.npm
              key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
              restore-keys: |
                    ${{ runner.os }}-node-
 
 Test-job1:
    runs-on: ubuntu-latest
    needs: [Build-job]
    if: github.ref != 'refs/heads/production' 
    name: Test1
    steps:
      - uses: actions/checkout@v1
      - name: Test1
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm install --global mocha
      - run: npm test 
 Test-job2:
    runs-on: ubuntu-latest
    needs: Build-job 
    if: github.ref != 'refs/heads/production' 
    name: Test2
    steps:
      - uses: actions/checkout@v1
      - name: Test2
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm install mocha chai --save-dev
      - run: npm test
 Test-job3:
    runs-on: ubuntu-latest
    needs: Build-job 
    if: github.ref != 'refs/heads/production' 
    name: Test3
    steps:
      - uses: actions/checkout@v1
      - name: Test3
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm install --global mocha
      - run: npm install unit.js
      - run: npm test 
 
 Deploy-job:
    runs-on: ubuntu-latest
    needs: [Test-job1,Test-job2,Test-job3]
    name: Deployment
    steps:
      - uses: actions/checkout@v1
      - name: Surge deployment
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run: npm install -g surge
      - run: surge ./ ${{secrets.SURGE_DOMAIN }} --token ${{ secrets.SURGE_TOKEN }}

 Postdeploy-Testing:
    runs-on: ubuntu-latest
    needs: Deploy-job
    name: Curl-Testing
    steps:
      - uses: actions/checkout@v1
      - name: Curl-testing
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - run:  sudo apt install curl
      - run: curl -Is http://www.google.com | head -n 1 
 
 sonartest:
    runs-on: ubuntu-latest
    needs: [Postdeploy-Testing]
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2    
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
